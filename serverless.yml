# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: workproject
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: indra-job
# "service" is the name of this project. This will also be added to your AWS resource names.
service: swapi-crud

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    TABLE_NAME: ${self:service}-${self:provider.stage}-characters
  memorySize: 512
  timeout: 10
  httpApi:
    cors: true

package:
  patterns:
    - '!.dynamodb/**'
    - '!request'
    - '!tests/**'

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get
  starWarsIntegration:
    handler: handler.starWarsIntegration
    events:
      - http:
          path: /starwars/{id}
          method: get
          cors: true
  createCharacter:
    handler: handler.createCharacter
    events:
      - http:
          path: /characters
          method: post
          cors: true
  getCharacters:
    handler: handler.getCharacters
    events:
      - http:
          path: /characters
          method: get
          cors: true

plugins:
  - serverless-offline
  - serverless-dynamodb

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
    seed:
      development:
        sources:
          - table: ${self:service}-${self:provider.stage}-characters
    stages:
      - ${self:provider.stage}

resources:
  Resources:
    CharactersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self::service}-${self:provider.stage}-characters
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PROVISIONED
        ProvisionedThroughput:
          ReadCapacityUnits: 20
          WriteCapacityUnits: 15
